package{	import alternativa.engine3d.core.Camera3D;	import alternativa.engine3d.core.CameraManager;	import alternativa.engine3d.core.Object3D;	import alternativa.engine3d.core.Resource;	import alternativa.engine3d.core.View;	import alternativa.engine3d.lights.AmbientLight;	import alternativa.engine3d.lights.OmniLight;	import alternativa.engine3d.materials.TextureMaterial;	import alternativa.engine3d.materials.VertexLightTextureMaterial;	import alternativa.engine3d.objects.SkyBox;	import alternativa.engine3d.primitives.Box;	import alternativa.engine3d.primitives.GeoSphere;	import alternativa.engine3d.primitives.Plane;	import alternativa.engine3d.resources.BitmapTextureResource;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Sprite;	import flash.display.Stage3D;	import flash.events.Event;	public class Main extends Sprite	{		[Embed(source="hud.png")] private var hudIMG:Class;		[Embed(source="spacebg.jpg")] private var spaceIMG:Class;		private var stage3D:Stage3D;		private var camera1:Camera3D;		private var camera2:Camera3D;		private var camera3:Camera3D;		private var camera4:Camera3D;		private var cm:CameraManager;		private var vw:View;		private var scene1:Object3D; // Background Scene		private var scene2:Object3D; // Object1 Scene		private var scene3:Object3D; // Object2 Scene		private var scene4:Object3D; // GUI Scene		private var aLight1:AmbientLight;		private var aLight2:AmbientLight;		private var aLight3:AmbientLight;		private var aLight4:AmbientLight;		private var oLight1:OmniLight;		private var oLight2:OmniLight;		private var oLight3:OmniLight;		private var oLight4:OmniLight;		private var sb:SkyBox;		private var ball1:GeoSphere;		private var box1:Box;		private var hud:Plane;		private var bmp:Bitmap;		private var bmd:BitmapData;		private var tex:BitmapTextureResource;		private var bg_tm:TextureMaterial;		private var hud_tm:TextureMaterial;		private var vm:VertexLightTextureMaterial;		//		//		//		public function Main()		{			addEventListener(Event.ADDED_TO_STAGE, init);		}		//		//		//		private function init(ev:Event):void		{			// 			scene1 = new Object3D(); 			scene2 = new Object3D(); 			scene3 = new Object3D(); 			scene4 = new Object3D();			//			camera1 = new Camera3D(1, 6000);			camera2 = new Camera3D(1, 6000);			camera3 = new Camera3D(1, 6000);			camera4 = new Camera3D(1, 6000);			vw = new View(stage.stageWidth, stage.stageHeight, false, 0x000000, 0, 16);			//			camera1.view = vw;			camera1.x = 0;			camera1.y = 0;			camera1.z = 0;			camera1.rotationX = 180 * Math.PI / 180;			camera1.renderClearsContext = false;			camera1.renderPresentsContext = false;			//			camera2.view = vw;			camera2.x = 0;			camera2.y = 0;			camera2.z = 1000;			camera2.rotationX = 180 * Math.PI / 180;			camera2.renderClearsContext = false;			camera2.renderPresentsContext = false;			//			camera3.view = vw;			camera3.x = 0;			camera3.y = 0;			camera3.z = 1000;			camera3.rotationX = 180 * Math.PI / 180;			camera3.renderClearsContext = false;			camera3.renderPresentsContext = false;			//			camera4.view = vw;			camera4.x = 0;			camera4.y = 0;			camera4.z = 1000;			camera4.rotationX = 180 * Math.PI / 180;			camera4.renderClearsContext = false;			camera4.renderPresentsContext = false;			addChild(vw);			//			addChild(camera1.diagram);			camera1.diagramAlign = "TL";			addChild(camera2.diagram);			camera2.diagramAlign = "TR";			addChild(camera3.diagram);			camera3.diagramAlign = "BL";			addChild(camera4.diagram);			camera4.diagramAlign = "BR";			//			scene1.addChild(camera1);			scene2.addChild(camera2);			scene3.addChild(camera3);			scene4.addChild(camera4);			//			stage3D = stage.stage3Ds[0];			cm = new CameraManager(stage3D, vw);			cm.addCamera(camera1)			cm.addCamera(camera2);			cm.addCamera(camera3);			cm.addCamera(camera4);			//			stage3D.addEventListener(Event.CONTEXT3D_CREATE, onContextCreate);			//			stage3D.requestContext3D();		}		//		//		//		private function onContextCreate(e:Event):void		{			//			stage3D.removeEventListener(Event.CONTEXT3D_CREATE, onContextCreate);			stage3D.context3D.configureBackBuffer(stage.stageWidth, stage.stageHeight, 4, true); 			//			aLight1 = new AmbientLight(0x222222);			scene1.addChild(aLight1);			aLight2 = new AmbientLight(0x222222);			scene2.addChild(aLight2);			aLight3 = new AmbientLight(0x222222);			scene3.addChild(aLight3);			aLight4 = new AmbientLight(0x222222);			scene4.addChild(aLight4);			//			oLight1 = new OmniLight(0xffffff, 1000, 10000);			oLight1.x = 300;			oLight1.y = 500;			oLight1.z = 500;			scene1.addChild(oLight1);			oLight2 = new OmniLight(0xffffff, 1000, 10000);			oLight2.x = 300;			oLight2.y = 500;			oLight2.z = 500;			scene2.addChild(oLight2);			oLight3 = new OmniLight(0xffffff, 1000, 10000);			oLight3.x = 300;			oLight3.y = 500;			oLight3.z = 500;			scene3.addChild(oLight3);			oLight4 = new OmniLight(0xffffff, 1000, 10000);			oLight4.x = 300;			oLight4.y = 500;			oLight4.z = 500;			scene4.addChild(oLight4);			//			// Scene 1 [Background]			//			bmp = new spaceIMG() as Bitmap;			bmd = bmp.bitmapData;			tex = new BitmapTextureResource(bmd);  			bg_tm = new TextureMaterial(tex);			sb = new SkyBox(5000, bg_tm, bg_tm, bg_tm, bg_tm, bg_tm, bg_tm, 0.0);			scene1.addChild(sb);			//			// Scene 2 [Ball]			//			bmd = new BitmapData(1, 1, false, 0xff0000);			tex = new BitmapTextureResource(bmd);			vm = new VertexLightTextureMaterial(tex);						ball1 = new GeoSphere(300, 4, false, vm);			scene2.addChild(ball1);			//			// Scene 3 [Box]			//			bmd = new BitmapData(1, 1, false, 0x0000ff);			tex = new BitmapTextureResource(bmd);			vm = new VertexLightTextureMaterial(tex);						box1 = new Box(400, 400, 400, 4, 4, 4, false, vm);			box1.x = 100;			box1.y = -100;			scene3.addChild(box1);			//			// Scene 4 [HUD]			//			bmp = new hudIMG() as Bitmap;			bmd = bmp.bitmapData;			tex = new BitmapTextureResource(bmd);  			hud_tm = new TextureMaterial(tex);			hud_tm.alphaThreshold = 1.0;			hud = new Plane(600, 150, 1, 1, false, false, null, hud_tm);			hud.x = 480;			hud.y = 140;			scene4.addChild(hud);			//			// Upload All Scene Data.			//			var resources:Vector.<Resource>;			var resource:Resource;			resources = scene1.getResources(true);			for each (resource in resources)			{				resource.upload(stage3D.context3D);			}			resources = scene2.getResources(true);			for each (resource in resources)			{				resource.upload(stage3D.context3D);			}			resources = scene3.getResources(true);			for each (resource in resources)			{				resource.upload(stage3D.context3D);			}			resources = scene4.getResources(true);			for each (resource in resources)			{				resource.upload(stage3D.context3D);			}			//			//			//			addEventListener(Event.ENTER_FRAME, onEnterFrameHandler);		}		//		//		//		private function onEnterFrameHandler(ev:Event):void		{			//			camera1.rotationX += 0.2 * Math.PI / 180;			camera1.rotationY += 0.2 * Math.PI / 180;			camera1.rotationZ += 0.2 * Math.PI / 180;			//			ball1.rotationY += 1 * Math.PI / 180;			//			box1.rotationX += 1 * Math.PI / 180;			box1.rotationY += 1 * Math.PI / 180;			//			// Draw Screen.			//			cm.clearScreen();			cm.renderLayers();			cm.drawScreen();					}	}}